/**
 * SCSS Mixins
 *
 * Reusable mixins for common patterns and utility generation.
 * Uses simple variable names for easy access.
 */

// SCSS Modules
@use 'sass:map';
@use 'sass:math';
@use 'sass:list';
@use 'sass:meta';

// Orbitools Modules
@use 'variables' as *;
@use 'functions' as *;

/**
 * Media Query Mixin
 * @param {string} $breakpoint - Breakpoint name from $breakpoint map
 * @param {string} $direction - 'min' (default) for min-width or 'max' for max-width
 * @example @include mq(md) { ... }                 // min-width (default)
 * @example @include mq(md, min) { ... }            // min-width (explicit)
 * @example @include mq(md, max) { ... }            // max-width (subtracts 0.0625rem)
 */
@mixin mq($breakpoint, $direction: min) {

    $value: map.get($orbi-breakpoints, $breakpoint);

    @if $value {
        @if $direction == max {
            @media (max-width: #{$value - 0.0625rem}) {
                @content;
            }
        } @else {
            @media (min-width: #{$value}) {
                @content;
            }
        }
    } @else {
        @warn "Breakpoint `#{$breakpoint}` not found in $orbi-breakpoints map.";
    }
}

  /// Generate CSS custom properties from a SCSS map
  /// @param {Map} $map - The SCSS map to iterate through
  /// @param {String} $prefix - Optional prefix for the CSS custom property names
  /// @return {String} - CSS custom properties
  @mixin generate-css-vars($map, $prefix: '') {
      @each $key, $value in $map {
          @if $prefix != '' {
              --#{$prefix}-#{$key}: #{$value};
          } @else {
              --#{$key}: #{$value};
          }
      }
  }

  /// Alternative function version that returns a string (for use in calc() etc.)
  /// @param {Map} $map - The SCSS map to iterate through
  /// @param {String} $prefix - Optional prefix for the CSS custom property names
  /// @return {String} - CSS custom properties as string
  @function map-to-css-vars($map, $prefix: '') {
      $result: '';
      @each $key, $value in $map {
          @if $prefix != '' {
              $result: $result + '--#{$prefix}-#{$key}: #{$value};';
          } @else {
              $result: $result + '--#{$key}: #{$value}; ';
          }
      }
      @return $result;
  }
