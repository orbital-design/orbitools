/**
 * Block: Marquee - Editor Styles
 *
 * Block editor specific styles for the Marquee block. Handles editor-only styling,
 * preview states, and block editor interface integration.
 *
 * @file        blocks/marquee/editor.scss
 * @package     OrbiTools
 * @subpackage  orbitools/blocks
 * @author      OrbiTools Team
 * @since       1.0.0
 * @version     1.0.0
 *
 * @see         blocks/marquee/index.scss - Frontend styles
 */

// Base class for Marquee block in editor
$elem_base: 'orb-marquee';

.wp-block-#{$elem_base}
{
    // Editor-specific overrides for marquee animation

    .#{$elem_base}__wrapper
    {
        display: block;
        gap: inherit;
        overflow: hidden;
        overflow-x: scroll;

        -ms-overflow-style: none;
        /* Internet Explorer 10+ */
        scrollbar-width: none;
        /* Firefox, Safari 18.2+, Chromium 121+ */

        &::-webkit-scrollbar
        {
            display: none;
            /* Older Safari and Chromium */
        }
    }

    // Style the content area in editor
    .#{$elem_base}__content
    {
        display: flex;
        flex-direction: row;
        flex-wrap: nowrap;
        gap: inherit;
        // Ensure content is visible during editing
        min-width: max-content;
        justify-content: center;
        flex-wrap: nowrap;
        white-space: nowrap !important;

        // Apply to nested elements as well
        > *
        {
            white-space: inherit !important;
        }

        // Make sure appenders are visible
        .block-list-appender
        {
            display: flex;
            align-items: center;
            margin-left: var(--marquee-gap, 40px);
        }
    }

    &.is-selected,
    &.is-highlighted,
    &.has-child-selected
    {
        .#{$elem_base}__wrapper
        {
            overflow-x: hidden;
        }

        // Ensure white space settings are applied in editor
        .#{$elem_base}__content
        {
            flex-wrap: wrap;
            white-space: initial !important;
            min-width: 1px;
        }
    }

    // Show overlay effects in editor when not selected/highlighted
    &.has-overlay-color
    {
        &:not(.is-selected, .is-highlighted, .has-child-selected)
        {
            position: relative;
            isolation: isolate;
            overflow: hidden;

            // Create overlay gradient effect using pseudo-elements
            &::before,
            &::after
            {
                pointer-events: none;
                position: absolute;
                content: "";
                z-index: 1;
                inset: 0;
            }

            // Horizontal marquee overlay
            &[data-orientation="x"]
            {

                &::before,
                &::after
                {
                    width: 15%;
                    height: 100%;
                }

                &::before
                {
                    background: linear-gradient(270deg,
                            transparent 0%,
                            var(--marquee-overlay-color, transparent) 100%);
                    left: 0;
                    right: auto;

                    // RTL support
                    [dir="rtl"] & {
                        background: linear-gradient(90deg,
                                transparent 0%,
                                var(--marquee-overlay-color, transparent) 100%);
                        left: auto;
                        right: 0;
                    }
                }

                &::after
                {
                    background: linear-gradient(90deg,
                            transparent 0%,
                            var(--marquee-overlay-color, transparent) 100%);
                    right: 0;
                    left: auto;

                    // RTL support
                    [dir="rtl"] & {
                        background: linear-gradient(270deg,
                                transparent 0%,
                                var(--marquee-overlay-color, transparent) 100%);
                        right: auto;
                        left: 0;
                    }
                }
            }

            // Vertical marquee overlay
            &[data-orientation="y"]
            {

                &::before,
                &::after
                {
                    width: 100%;
                    height: 15%;
                }

                &::before
                {
                    background: linear-gradient(0deg,
                            transparent 0%,
                            var(--marquee-overlay-color, transparent) 100%);
                    top: 0;
                    bottom: auto;
                }

                &::after
                {
                    background: linear-gradient(180deg,
                            transparent 0%,
                            var(--marquee-overlay-color, transparent) 100%);
                    bottom: 0;
                    top: auto;
                }
            }
        }
    }

    // Editor preview adjustments
    .block-editor-inner-blocks
    {
        // Ensure inner blocks are properly contained
        min-width: 0;

        // Remove default margins that might interfere with marquee layout
        .block-editor-block-list__layout
        {
            margin: 0;
        }
    }



    // Special handling for vertical orientation in editor
    &.#{$elem_base}--y
    {
        .#{$elem_base}__content
        {
            min-height: max-content;
            width: 100%;

            .block-list-appender
            {
                margin-left: 0;
                margin-top: var(--marquee-gap, 40px);
                justify-content: center;
            }
        }
    }
}
